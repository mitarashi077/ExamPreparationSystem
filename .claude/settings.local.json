{
  "permissions": {
    "allow": [
      "Bash(git config:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(powershell:*)",
      "Bash(git -C C:/work/05_git/claude-code-settings status)",
      "Bash(git -C C:/work/05_git/claude-code-settings add commands/spec.md commands/requirements.md commands/design.md commands/tasks.md)",
      "Bash(git -C C:/work/05_git/claude-code-settings commit -m \"fix: Remove .tmp directory usage from spec-driven development commands\n\n- spec.md: Use existing docs/ structure instead of .tmp\n- requirements.md: Create requirements in docs/requirements/\n- design.md: Create design docs in docs/design/\n- tasks.md: Create task lists in docs/plans/\n\nThis prevents creation of temporary files and follows established \ndocumentation structure conventions.\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C C:/work/05_git/claude-code-settings add settings.json)",
      "Bash(git -C C:/work/05_git/claude-code-settings commit -m \"fix: Simplify session-end hook to avoid PowerShell escaping issues\n\n- Replace complex PowerShell script with simple git add && commit\n- Ensures session-end auto-commit works reliably\n- Maintains atomic commit enforcement via pre-commit hook\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(echo:*)",
      "Bash(gh pr view:*)",
      "Bash(git branch:*)",
      "Bash(gh pr comment:*)"
    ],
    "deny": []
  },
  "project": "ExamPreparationSystem",
  "description": "Ë©¶È®ìÂïèÈ°åÊ∫ñÂÇô„Ç∑„Çπ„ÉÜ„É† - Claude CodeÈñãÁô∫Áî®Ë®≠ÂÆö",
  "extends": "C:\\work\\05_git\\claude-code-settings\\settings.json",
  "development_process": {
    "parallel_development": {
      "enabled": true,
      "max_concurrent_tasks": 3,
      "agent_roles": {
        "frontend_lead": "frontend-executor",
        "backend_lead": "backend-executor",
        "integration_lead": "task-executor",
        "qa_lead": "quality-fixer",
        "review_lead": "document-reviewer",
        "design_lead": "technical-designer",
        "decomposition_lead": "task-decomposer",
        "git_lead": "git-manager",
        "issue_manager": "general-purpose",
        "issue_resolver": "issue-resolver"
      }
    },
    "pr_review_process": {
      "mandatory_review": true,
      "review_agent": "quality-fixer",
      "approval_agent": "technical-designer",
      "discussion_required": true,
      "auto_merge_disabled": true,
      "review_checklist": [
        "Code quality and standards",
        "Test coverage and reliability",
        "Documentation completeness",
        "Security considerations",
        "Performance impact",
        "Integration compatibility"
      ],
      "auto_assign": {
        "reviewers": [
          "quality-fixer",
          "technical-designer"
        ],
        "assignees": [
          "auto-assign-author"
        ],
        "labels": {
          "frontend_changes": "frontend",
          "backend_changes": "backend",
          "docs_changes": "documentation",
          "database_changes": "database"
        },
        "projects": [
          "ExamPreparationSystem"
        ],
        "milestone": "auto-detect"
      }
    }
  }
}