generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./exam_prep.db"
}

model Category {
  id          String        @id @default(cuid())
  name        String
  description String?
  parentId    String?
  parent      Category?     @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[]    @relation("CategoryHierarchy")
  questions   Question[]
  studyTargets StudyTarget[] // 学習目標との関連
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Question {
  id          String       @id @default(cuid())
  content     String
  explanation String?
  difficulty  Int          @default(1) // 1-5 scale
  year        Int?
  session     String?      // 春期、秋期など
  categoryId  String
  category    Category     @relation(fields: [categoryId], references: [id])
  choices     Choice[]
  answers     Answer[]
  reviewItems ReviewItem[] // 復習管理との関連
  bookmarks   Bookmark[]   // ブックマーク機能との関連
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Choice {
  id         String   @id @default(cuid())
  content    String
  isCorrect  Boolean  @default(false)
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Answer {
  id         String   @id @default(cuid())
  isCorrect  Boolean
  timeSpent  Int?     // seconds
  deviceType String?  // "pc", "mobile", "tablet"
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

model StudySession {
  id         String   @id @default(cuid())
  deviceType String?
  duration   Int?     // seconds
  score      Float?   // percentage
  categoryId String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// 復習管理テーブル - 間違い問題の蓄積と復習スケジュール管理
model ReviewItem {
  id            String   @id @default(cuid())
  questionId    String
  question      Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  masteryLevel  Int      @default(0) // 習熟度レベル 0-5 (0=未習得, 5=完全習得)
  reviewCount   Int      @default(0) // 復習回数
  lastReviewed  DateTime? // 最後に復習した日時
  nextReview    DateTime // 次回復習予定日時
  wrongCount    Int      @default(1) // 間違えた回数
  correctStreak Int      @default(0) // 連続正解回数
  priority      Int      @default(1) // 復習優先度 1-5 (5=最高優先度)
  isActive      Boolean  @default(true) // アクティブ状態
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([questionId]) // 1つの問題につき1つの復習アイテム
}

// 復習セッション記録
model ReviewSession {
  id         String   @id @default(cuid())
  duration   Int?     // seconds
  totalItems Int      @default(0) // 復習した問題数
  correctItems Int    @default(0) // 正解した問題数
  deviceType String?
  createdAt  DateTime @default(now())
}

// ブックマーク管理テーブル - 重要問題のマーク・メモ機能
model Bookmark {
  id         String   @id @default(cuid())
  questionId String
  userId     String?  // オプショナル（ユーザー機能未実装のため）
  memo       String?  // メモ機能
  isActive   Boolean  @default(true) // アクティブ状態
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@unique([questionId, userId]) // 同一ユーザー・問題の重複防止
}

// 試験スケジュール管理テーブル - 試験日程・目標管理
model ExamSchedule {
  id          String   @id @default(cuid())
  examType    String   // "spring" | "autumn" | "special"
  examDate    DateTime
  targetScore Int?     // 目標点数（オプション）
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  studyTargets StudyTarget[]
  
  @@index([examDate, isActive])
}

// 学習目標管理テーブル - カテゴリ別・期間別の学習目標
model StudyTarget {
  id             String   @id @default(cuid())
  examScheduleId String
  categoryId     String?  // カテゴリ別目標（オプション）
  targetType     String   // "daily" | "weekly" | "total"
  targetValue    Int      // 目標値（問題数・時間など）
  currentValue   Int      @default(0)
  unit          String   // "questions" | "minutes" | "sessions"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  examSchedule ExamSchedule @relation(fields: [examScheduleId], references: [id], onDelete: Cascade)
  category     Category?    @relation(fields: [categoryId], references: [id])
  
  @@index([examScheduleId])
}